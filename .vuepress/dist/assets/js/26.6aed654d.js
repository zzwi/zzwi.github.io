(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{457:function(t,a,s){"use strict";s.r(a);var n=s(16),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"ajax"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ajax"}},[t._v("#")]),t._v(" Ajax")]),t._v(" "),s("p",[s("strong",[t._v("Ajax包括以下几个步骤")])]),t._v(" "),s("blockquote",[s("ol",[s("li",[t._v("创建 XMLHttpRequest 实例")]),t._v(" "),s("li",[t._v("发出 HTTP 请求")]),t._v(" "),s("li",[t._v("接收服务器传回的数据")]),t._v(" "),s("li",[t._v("更新网页数据")])])]),t._v(" "),s("p",[s("strong",[t._v("XMLHttpRequest")]),t._v(" 对象是Ajax的主要接口，用于浏览器与服务器之间的通信。")]),t._v(" "),s("ol",[s("li",[t._v("创建 Ajax 对象")])]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// JavaScript")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" xhr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("XMLHttpRequest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("告诉 Ajax 请求地址以及请求方式")])]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// JavaScript")]),t._v("\nxhr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'get'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://www.bilibili.com'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("ol",{attrs:{start:"3"}},[s("li",[t._v("发送请求")])]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// JavaScript")]),t._v("\nxhr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("ol",{attrs:{start:"4"}},[s("li",[t._v("获取服务器端给与客户端的响应数据")])]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// JavaScript")]),t._v("\nxhr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onload")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xhr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("responseText"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[s("strong",[t._v("服务器端响应的数据格式：")])]),t._v(" "),s("p",[t._v("在真实的项目中，服务器端大多数情况下会以 JSON 对象作为响应数据的格式。当客户端拿到响应数据时，要将 JSON 数据和 HTML 字符串进行拼接，然后将拼接的结果展示在页面中。")]),t._v(" "),s("p",[s("strong",[t._v("获取服务器端的响应:")])]),t._v(" "),s("p",[t._v("两种获取服务器端响应方式的区别")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("区别描述")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("onload事件")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("onreadystatechange事件")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("是否兼容IE低版本")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("不兼容")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("兼容")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("是否需要判断Ajax状态码")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("不需要")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("需要")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("被调用次数")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("一次")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("多次")])])])]),t._v(" "),s("p",[s("strong",[t._v("Ajax 错误处理：")])]),t._v(" "),s("ol",[s("li",[s("p",[t._v("网络畅通，服务器端能接收到请求，服务器端返回的结果不是预期结果。")]),t._v(" "),s("p",[t._v("解决方法：可以判断服务器端返回的状态码，分别进行处理。xhr.status 获取 "),s("strong",[t._v("http状态码")]),t._v(" 。")])]),t._v(" "),s("li",[s("p",[t._v("网络畅通，服务器端没有接收到请求，返回 "),s("strong",[t._v("404状态码")]),t._v(" 。")]),t._v(" "),s("p",[t._v("解决方法：检查请求地址是否错误。")])]),t._v(" "),s("li",[s("p",[t._v("网络畅通，服务器端能接收到请求，服务器端返回 "),s("strong",[t._v("500状态码")]),t._v(" 。")]),t._v(" "),s("p",[t._v("解决方法：服务器端错误，找后端程序员进行沟通。")])]),t._v(" "),s("li",[s("p",[t._v("网络中断，请求无法发送到服务器端。")]),t._v(" "),s("p",[t._v("解决方法：这会触发xhr对象下面的 onerror 事件，可以在 onerror 事件处理函数中对错误进行处理。")])])]),t._v(" "),s("p",[s("strong",[t._v("状态码的区分：")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("类别")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("作用")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Ajax状态码")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("表示Ajax请求的过程状态，是由Ajax对象返回的")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Http状态码")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("表示请求的处理结果，是服务器端返回的")])])])]),t._v(" "),s("p",[s("strong",[t._v("同步和异步的概述：")])]),t._v(" "),s("p",[t._v("同步：代码按顺序一行一行地严格执行。")]),t._v(" "),s("p",[t._v("异步：存在异步代码时，程序虽然会花费时间去执行异步代码，但程序不会等待异步代码执行完成后再继续执行后续代码，而是直接执行后续代码，当后续代码执行完成后再回头看异步代码是否返回结果，如果已有返回结果，再调用事先准备好的回调函数处理异步代码执行的结果。")]),t._v(" "),s("h2",{attrs:{id:"同源政策"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#同源政策"}},[t._v("#")]),t._v(" 同源政策")]),t._v(" "),s("p",[s("strong",[t._v("Ajax请求限制：")])]),t._v(" "),s("p",[t._v("Ajax 只能向自己的服务器发送请求，比如现在有一个A网站，有一个B网站，A网站中的 HTML 文件只能向A网站服务器中发送 Ajax 请求，B网站中的 HTML 文件只能向B网站中发送 Ajax 请求，A网站不能向B网站发送 Ajax 请求，同理，B 网站也不能向A网站发送 Ajax 请求。")]),t._v(" "),s("p",[t._v("如果两个页面拥有相同的协议、域名和端口，那么这两个页面就属于同一个源，其中只要有一个不相同，就是不同源。")]),t._v(" "),s("p",[s("strong",[t._v("1.使用 JSONP 解决同源限制问题：")])]),t._v(" "),s("p",[t._v("jsonp 是 json with padding 的缩写，它不属于 Ajax 请求，但它可以模拟 Ajax 请求。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("将不同源的服务器端请求地址写在 script 标签的 src 属性中")]),t._v(" "),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("www.baidu.com"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token script"}}),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])]),t._v(" "),s("li",[s("p",[t._v("服务器端响应数据必须是一个 "),s("strong",[t._v("函数的调用")]),t._v(" ，因为我们真正发送给客户端的数据是 "),s("strong",[t._v("作为函数调用的参数")]),t._v(" ，这么做的原因是，我们在前面是通过 script 标签来对不同源的服务器端发送请求的，而 script 标签会在加载完服务器端返回的响应内容之后会自动将响应内容当做 JavaScript 代码来执行。")]),t._v(" "),s("div",{staticClass:"language-node.js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("const data = 'fn({name: \"zzwi\",age: 21})';\nres.send(data);\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])])]),t._v(" "),s("li",[s("p",[t._v("在客户端全局作用域下定义函数 fn ，且要定义在带服务器端地址的 script 标签的前面，防止 script 标签内的 函数调用 找不到定义的函数 fn 然后报错。")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])]),t._v(" "),s("li",[s("p",[t._v("在 fn 函数内部对服务器端返回的数据进行处理")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])])]),t._v(" "),s("p",[s("strong",[t._v("2.JSONP代码优化：")])]),t._v(" "),s("ol",[s("li",[t._v("通过客户端将函数名称传递到服务器端。")]),t._v(" "),s("li",[t._v("将 script 请求的发送变成动态请求。")]),t._v(" "),s("li",[t._v("封装 jsonp 函数，方便请求发送。")])]),t._v(" "),s("p",[s("strong",[t._v("3.CORS 跨域资源共享：")])]),t._v(" "),s("p",[t._v("CORS：全称为 Cross-origin resource sharing，即跨域资源共享，它允许浏览器向跨域服务器发送Ajax请求，克服了Ajax只能同源使用的限制。")])])}),[],!1,null,null,null);a.default=e.exports}}]);